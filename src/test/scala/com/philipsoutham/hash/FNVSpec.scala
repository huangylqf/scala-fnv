package com.philipsoutham.hash
import org.scalatest._
import scala.collection.mutable
import scala.collection.immutable

abstract class UnitSpec extends FlatSpec with Matchers {
  def multiplyArray(data: Array[Byte], times: Int): Array[Byte] = {
    var ret: mutable.IndexedSeq[Byte] = mutable.IndexedSeq.fill(data.length * times)(0.toByte)
    for (i <- 0 until times) yield {
      for (j <- 0 until data.length) yield {
        ret((i * data.length) + j) = data(j)
      }
    }
    ret.toArray
  }
  val data = immutable.LinearSeq[Array[Byte]](
    "".getBytes(),
    "a".getBytes(),
    "b".getBytes(),
    "c".getBytes(),
    "d".getBytes(),
    "e".getBytes(),
    "f".getBytes(),
    "fo".getBytes(),
    "foo".getBytes(),
    "foob".getBytes(),
    "fooba".getBytes(),
    "foobar".getBytes(),
    "ch".getBytes(),
    "cho".getBytes(),
    "chon".getBytes(),
    "chong".getBytes(),
    "chongo".getBytes(),
    "chongo ".getBytes(),
    "chongo w".getBytes(),
    "chongo wa".getBytes(),
    "chongo was".getBytes(),
    "chongo was ".getBytes(),
    "chongo was h".getBytes(),
    "chongo was he".getBytes(),
    "chongo was her".getBytes(),
    "chongo was here".getBytes(),
    "chongo was here!".getBytes(),
    "chongo was here!\n".getBytes(),
    "cu".getBytes(),
    "cur".getBytes(),
    "curd".getBytes(),
    "curds".getBytes(),
    "curds ".getBytes(),
    "curds a".getBytes(),
    "curds an".getBytes(),
    "curds and".getBytes(),
    "curds and ".getBytes(),
    "curds and w".getBytes(),
    "curds and wh".getBytes(),
    "curds and whe".getBytes(),
    "curds and whey".getBytes(),
    "curds and whey\n".getBytes(),
    "hi".getBytes(),
    "hello".getBytes(),
    Array[Byte](0xff.toByte, 0x00.toByte, 0x00.toByte, 0x01.toByte),
    Array[Byte](0x01.toByte, 0x00.toByte, 0x00.toByte, 0xff.toByte),
    Array[Byte](0xff.toByte, 0x00.toByte, 0x00.toByte, 0x02.toByte),
    Array[Byte](0x02.toByte, 0x00.toByte, 0x00.toByte, 0xff.toByte),
    Array[Byte](0xff.toByte, 0x00.toByte, 0x00.toByte, 0x03.toByte),
    Array[Byte](0x03.toByte, 0x00.toByte, 0x00.toByte, 0xff.toByte),
    Array[Byte](0xff.toByte, 0x00.toByte, 0x00.toByte, 0x04.toByte),
    Array[Byte](0x04.toByte, 0x00.toByte, 0x00.toByte, 0xff.toByte),
    Array[Byte](0x40.toByte, 0x51.toByte, 0x4e.toByte, 0x44.toByte),
    Array[Byte](0x44.toByte, 0x4e.toByte, 0x51.toByte, 0x40.toByte),
    Array[Byte](0x40.toByte, 0x51.toByte, 0x4e.toByte, 0x4a.toByte),
    Array[Byte](0x4a.toByte, 0x4e.toByte, 0x51.toByte, 0x40.toByte),
    Array[Byte](0x40.toByte, 0x51.toByte, 0x4e.toByte, 0x54.toByte),
    Array[Byte](0x54.toByte, 0x4e.toByte, 0x51.toByte, 0x40.toByte),
    "127.0.0.1".getBytes(),
    "127.0.0.2".getBytes(),
    "127.0.0.3".getBytes(),
    "64.81.78.68".getBytes(),
    "64.81.78.74".getBytes(),
    "64.81.78.84".getBytes(),
    "feedface".getBytes(),
    "feedfacedaffdeed".getBytes(),
    "feedfacedeadbeef".getBytes(),
    "line 1\nline 2\nline 3".getBytes(),
    "chongo <Landon Curt Noll> /\\../\\".getBytes(),
    "chongo (Landon Curt Noll) /\\../\\".getBytes(),
    "http://antwrp.gsfc.nasa.gov/apod/astropix.html".getBytes(),
    "http://en.wikipedia.org/wiki/Fowler_Noll_Vo_hash".getBytes(),
    "http://epod.usra.edu/".getBytes(),
    "http://exoplanet.eu/".getBytes(),
    "http://hvo.wr.usgs.gov/cam3/".getBytes(),
    "http://hvo.wr.usgs.gov/cams/HMcam/".getBytes(),
    "http://hvo.wr.usgs.gov/kilauea/update/deformation.html".getBytes(),
    "http://hvo.wr.usgs.gov/kilauea/update/images.html".getBytes(),
    "http://hvo.wr.usgs.gov/kilauea/update/maps.html".getBytes(),
    "http://hvo.wr.usgs.gov/volcanowatch/current_issue.html".getBytes(),
    "http://neo.jpl.nasa.gov/risk/".getBytes(),
    "http://norvig.com/21-days.html".getBytes(),
    "http://primes.utm.edu/curios/home.php".getBytes(),
    "http://slashdot.org/".getBytes(),
    "http://tux.wr.usgs.gov/Maps/155.25-19.5.html".getBytes(),
    "http://volcano.wr.usgs.gov/kilaueastatus.php".getBytes(),
    "http://www.avo.alaska.edu/activity/Redoubt.php".getBytes(),
    "http://www.dilbert.com/fast/".getBytes(),
    "http://www.fourmilab.ch/gravitation/orbits/".getBytes(),
    "http://www.fpoa.net/".getBytes(),
    "http://www.ioccc.org/index.html".getBytes(),
    "http://www.isthe.com/cgi-bin/number.cgi".getBytes(),
    "http://www.isthe.com/chongo/bio.html".getBytes(),
    "http://www.isthe.com/chongo/index.html".getBytes(),
    "http://www.isthe.com/chongo/src/calc/lucas-calc".getBytes(),
    "http://www.isthe.com/chongo/tech/astro/venus2004.html".getBytes(),
    "http://www.isthe.com/chongo/tech/astro/vita.html".getBytes(),
    "http://www.isthe.com/chongo/tech/comp/c/expert.html".getBytes(),
    "http://www.isthe.com/chongo/tech/comp/calc/index.html".getBytes(),
    "http://www.isthe.com/chongo/tech/comp/fnv/index.html".getBytes(),
    "http://www.isthe.com/chongo/tech/math/number/howhigh.html".getBytes(),
    "http://www.isthe.com/chongo/tech/math/number/number.html".getBytes(),
    "http://www.isthe.com/chongo/tech/math/prime/mersenne.html".getBytes(),
    "http://www.isthe.com/chongo/tech/math/prime/mersenne.html#largest".getBytes(),
    "http://www.lavarnd.org/cgi-bin/corpspeak.cgi".getBytes(),
    "http://www.lavarnd.org/cgi-bin/haiku.cgi".getBytes(),
    "http://www.lavarnd.org/cgi-bin/rand-none.cgi".getBytes(),
    "http://www.lavarnd.org/cgi-bin/randdist.cgi".getBytes(),
    "http://www.lavarnd.org/index.html".getBytes(),
    "http://www.lavarnd.org/what/nist-test.html".getBytes(),
    "http://www.macosxhints.com/".getBytes(),
    "http://www.mellis.com/".getBytes(),
    "http://www.nature.nps.gov/air/webcams/parks/havoso2alert/havoalert.cfm".getBytes(),
    "http://www.nature.nps.gov/air/webcams/parks/havoso2alert/timelines_24.cfm".getBytes(),
    "http://www.paulnoll.com/".getBytes(),
    "http://www.pepysdiary.com/".getBytes(),
    "http://www.sciencenews.org/index/home/activity/view".getBytes(),
    "http://www.skyandtelescope.com/".getBytes(),
    "http://www.sput.nl/~rob/sirius.html".getBytes(),
    "http://www.systemexperts.com/".getBytes(),
    "http://www.tq-international.com/phpBB3/index.php".getBytes(),
    "http://www.travelquesttours.com/index.htm".getBytes(),
    "http://www.wunderground.com/global/stations/89606.html".getBytes(),
    multiplyArray("21701".getBytes(), 10),
    multiplyArray("M21701".getBytes(), 10),
    multiplyArray("2^21701-1".getBytes(), 10),
    multiplyArray(Array[Byte](0x54.toByte, 0xc5.toByte), 10),
    multiplyArray(Array[Byte](0xc5.toByte, 0x54.toByte), 10),
    multiplyArray("23209".getBytes(), 10),
    multiplyArray("M23209".getBytes(), 10),
    multiplyArray("2^23209-1".getBytes(), 10),
    multiplyArray(Array[Byte](0x5a.toByte, 0xa9.toByte), 10),
    multiplyArray(Array[Byte](0xa9.toByte, 0x5a.toByte), 10),
    multiplyArray("391581216093".getBytes(), 10),
    multiplyArray("391581*2^216093-1".getBytes(), 10),
    multiplyArray(Array[Byte](0x05.toByte, 0xf9.toByte, 0x9d.toByte, 0x03.toByte, 0x4c.toByte, 0x81.toByte), 10),
    multiplyArray("FEDCBA9876543210".getBytes(), 10),
    multiplyArray(Array[Byte](0xfe.toByte, 0xdc.toByte, 0xba.toByte, 0x98.toByte, 0x76.toByte, 0x54.toByte, 0x32.toByte, 0x10.toByte), 10),
    multiplyArray("EFCDAB8967452301".getBytes(), 10),
    multiplyArray(Array[Byte](0xef.toByte, 0xcd.toByte, 0xab.toByte, 0x89.toByte, 0x67.toByte, 0x45.toByte, 0x23.toByte, 0x01.toByte), 10),
    multiplyArray("0123456789ABCDEF".getBytes(), 10),
    multiplyArray(Array[Byte](0x01.toByte, 0x23.toByte, 0x45.toByte, 0x67.toByte, 0x89.toByte, 0xab.toByte, 0xcd.toByte, 0xef.toByte), 10),
    multiplyArray("1032547698BADCFE".getBytes(), 10),
    multiplyArray(Array[Byte](0x10.toByte, 0x32.toByte, 0x54.toByte, 0x76.toByte, 0x98.toByte, 0xba.toByte, 0xdc.toByte, 0xfe.toByte), 10),
    multiplyArray(Array[Byte](0x00.toByte), 500),
    multiplyArray(Array[Byte](0x07.toByte), 500),
    multiplyArray("~".getBytes(), 500),
    multiplyArray(Array[Byte](0x7f.toByte), 500)
  )
  val correctHash32 = immutable.LinearSeq[BigInt](
    BigInt("811c9dc5", 16),
    BigInt("050c5d7e", 16),
    BigInt("050c5d7d", 16),
    BigInt("050c5d7c", 16),
    BigInt("050c5d7b", 16),
    BigInt("050c5d7a", 16),
    BigInt("050c5d79", 16),
    BigInt("6b772514", 16),
    BigInt("408f5e13", 16),
    BigInt("b4b1178b", 16),
    BigInt("fdc80fb0", 16),
    BigInt("31f0b262", 16),
    BigInt("6e772a5c", 16),
    BigInt("4197aebb", 16),
    BigInt("fcc8100f", 16),
    BigInt("fdf147fa", 16),
    BigInt("bcd44ee1", 16),
    BigInt("23382c13", 16),
    BigInt("846d619e", 16),
    BigInt("1630abdb", 16),
    BigInt("c99e89b2", 16),
    BigInt("1692c316", 16),
    BigInt("9f091bca", 16),
    BigInt("2556be9b", 16),
    BigInt("628e0e73", 16),
    BigInt("98a0bf6c", 16),
    BigInt("b10d5725", 16),
    BigInt("dd002f35", 16),
    BigInt("6e772a41", 16),
    BigInt("26978421", 16),
    BigInt("e184ff97", 16),
    BigInt("9b5e5ac6", 16),
    BigInt("5b88e592", 16),
    BigInt("aa8164b7", 16),
    BigInt("20b18c7b", 16),
    BigInt("f28025c5", 16),
    BigInt("84bb753f", 16),
    BigInt("3219925a", 16),
    BigInt("384163c6", 16),
    BigInt("54f010d7", 16),
    BigInt("8cea820c", 16),
    BigInt("e12ab8ee", 16),
    BigInt("6977223c", 16),
    BigInt("b6fa7167", 16),
    BigInt("b78320a1", 16),
    BigInt("0caf4135", 16),
    BigInt("b78320a2", 16),
    BigInt("cdc88e80", 16),
    BigInt("b78320a3", 16),
    BigInt("8ee1dbcb", 16),
    BigInt("b78320a4", 16),
    BigInt("4ffb2716", 16),
    BigInt("860632aa", 16),
    BigInt("cc2c5c64", 16),
    BigInt("860632a4", 16),
    BigInt("2a7ec4a6", 16),
    BigInt("860632ba", 16),
    BigInt("fefe8e14", 16),
    BigInt("0a3cffd8", 16),
    BigInt("0a3cffdb", 16),
    BigInt("0a3cffda", 16),
    BigInt("c07167d7", 16),
    BigInt("bf716668", 16),
    BigInt("c6717155", 16),
    BigInt("7662e0d6", 16),
    BigInt("c2732f95", 16),
    BigInt("3a19c02a", 16),
    BigInt("31ae8f83", 16),
    BigInt("995fa9c4", 16),
    BigInt("5036a251", 16),
    BigInt("b4448d60", 16),
    BigInt("025dfe59", 16),
    BigInt("c5eab3af", 16),
    BigInt("7d21ba1e", 16),
    BigInt("7704cddb", 16),
    BigInt("d0071bfe", 16),
    BigInt("0ff3774c", 16),
    BigInt("b0fea0ea", 16),
    BigInt("58177303", 16),
    BigInt("4f599cda", 16),
    BigInt("3e590a47", 16),
    BigInt("965595f8", 16),
    BigInt("c37f178d", 16),
    BigInt("9711dd26", 16),
    BigInt("23c99b7f", 16),
    BigInt("6e568b17", 16),
    BigInt("43f0245b", 16),
    BigInt("bcb7a001", 16),
    BigInt("12e6dffe", 16),
    BigInt("0792f2d6", 16),
    BigInt("b966936b", 16),
    BigInt("46439ac5", 16),
    BigInt("728d49af", 16),
    BigInt("d33745c9", 16),
    BigInt("bc382a57", 16),
    BigInt("4bda1d31", 16),
    BigInt("ce35ccae", 16),
    BigInt("3b6eed94", 16),
    BigInt("445c9c58", 16),
    BigInt("3db8bf9d", 16),
    BigInt("2dee116d", 16),
    BigInt("c18738da", 16),
    BigInt("5b156176", 16),
    BigInt("2aa7d593", 16),
    BigInt("b2409658", 16),
    BigInt("e1489528", 16),
    BigInt("fe1ee07e", 16),
    BigInt("e8842315", 16),
    BigInt("3a6a63a2", 16),
    BigInt("06d2c18c", 16),
    BigInt("f8ef7225", 16),
    BigInt("843d3300", 16),
    BigInt("bb24f7ae", 16),
    BigInt("878c0ec9", 16),
    BigInt("b557810f", 16),
    BigInt("57423246", 16),
    BigInt("87f7505e", 16),
    BigInt("bb809f20", 16),
    BigInt("8932abb5", 16),
    BigInt("0a9b3aa0", 16),
    BigInt("b8682a24", 16),
    BigInt("a7ac1c56", 16),
    BigInt("11409252", 16),
    BigInt("a987f517", 16),
    BigInt("f309e7ed", 16),
    BigInt("c9e8f417", 16),
    BigInt("7f447bdd", 16),
    BigInt("b929adc5", 16),
    BigInt("57022879", 16),
    BigInt("dcfd2c49", 16),
    BigInt("6edafff5", 16),
    BigInt("f04fb1f1", 16),
    BigInt("fb7de8b9", 16),
    BigInt("c5f1d7e9", 16),
    BigInt("32c1f439", 16),
    BigInt("7fd3eb7d", 16),
    BigInt("81597da5", 16),
    BigInt("05eb7a25", 16),
    BigInt("9c0fa1b5", 16),
    BigInt("53ccb1c5", 16),
    BigInt("fabece15", 16),
    BigInt("4ad745a5", 16),
    BigInt("e5bdc495", 16),
    BigInt("23b3c0a5", 16),
    BigInt("fa823dd5", 16),
    BigInt("0c6c58b9", 16),
    BigInt("e2dbccd5", 16),
    BigInt("db7f50f9", 16)
  )
  val correctHash64 = immutable.LinearSeq[BigInt](
    BigInt("cbf29ce484222325", 16),
    BigInt("af63bd4c8601b7be", 16),
    BigInt("af63bd4c8601b7bd", 16),
    BigInt("af63bd4c8601b7bc", 16),
    BigInt("af63bd4c8601b7bb", 16),
    BigInt("af63bd4c8601b7ba", 16),
    BigInt("af63bd4c8601b7b9", 16),
    BigInt("08326207b4eb2f34", 16),
    BigInt("d8cbc7186ba13533", 16),
    BigInt("0378817ee2ed65cb", 16),
    BigInt("d329d59b9963f790", 16),
    BigInt("340d8765a4dda9c2", 16),
    BigInt("08326507b4eb341c", 16),
    BigInt("d8d5c8186ba98bfb", 16),
    BigInt("1ccefc7ef118dbef", 16),
    BigInt("0c92fab3ad3db77a", 16),
    BigInt("9b77794f5fdec421", 16),
    BigInt("0ac742dfe7874433", 16),
    BigInt("d7dad5766ad8e2de", 16),
    BigInt("a1bb96378e897f5b", 16),
    BigInt("5b3f9b6733a367d2", 16),
    BigInt("b07ce25cbea969f6", 16),
    BigInt("8d9e9997f9df0d6a", 16),
    BigInt("838c673d9603cb7b", 16),
    BigInt("8b5ee8a5e872c273", 16),
    BigInt("4507c4e9fb00690c", 16),
    BigInt("4c9ca59581b27f45", 16),
    BigInt("e0aca20b624e4235", 16),
    BigInt("08326507b4eb3401", 16),
    BigInt("d8d5ad186ba95dc1", 16),
    BigInt("1c72e17ef0ca4e97", 16),
    BigInt("2183c1b327c38ae6", 16),
    BigInt("b66d096c914504f2", 16),
    BigInt("404bf57ad8476757", 16),
    BigInt("887976bd815498bb", 16),
    BigInt("3afd7f02c2bf85a5", 16),
    BigInt("fc4476b0eb70177f", 16),
    BigInt("186d2da00f77ecba", 16),
    BigInt("f97140fa48c74066", 16),
    BigInt("a2b1cf49aa926d37", 16),
    BigInt("0690712cd6cf940c", 16),
    BigInt("f7045b3102b8906e", 16),
    BigInt("08326007b4eb2b9c", 16),
    BigInt("7b495389bdbdd4c7", 16),
    BigInt("d6b2b17bf4b71261", 16),
    BigInt("447bfb7f98e615b5", 16),
    BigInt("d6b2b17bf4b71262", 16),
    BigInt("3bd2807f93fe1660", 16),
    BigInt("d6b2b17bf4b71263", 16),
    BigInt("3329057f8f16170b", 16),
    BigInt("d6b2b17bf4b71264", 16),
    BigInt("2a7f8a7f8a2e19b6", 16),
    BigInt("23d3767e64b2f98a", 16),
    BigInt("ff768d7e4f9d86a4", 16),
    BigInt("23d3767e64b2f984", 16),
    BigInt("ccd1837e334e4aa6", 16),
    BigInt("23d3767e64b2f99a", 16),
    BigInt("7691fd7e028f6754", 16),
    BigInt("34ad3b1041204318", 16),
    BigInt("34ad3b104120431b", 16),
    BigInt("34ad3b104120431a", 16),
    BigInt("02a17ebca4aa3497", 16),
    BigInt("02a17dbca4aa32c8", 16),
    BigInt("02a184bca4aa3ed5", 16),
    BigInt("5c2c346706186f36", 16),
    BigInt("ed9478212b267395", 16),
    BigInt("8c54f0203249438a", 16),
    BigInt("a64e5f36c9e2b0e3", 16),
    BigInt("8fd0680da3088a04", 16),
    BigInt("b37d55d81c57b331", 16),
    BigInt("cb27f4b8e1b6cc20", 16),
    BigInt("26caf88bcbef2d19", 16),
    BigInt("8e6e063b97e61b8f", 16),
    BigInt("b42750f7f3b7c37e", 16),
    BigInt("f3c6ba64cf7ca99b", 16),
    BigInt("ebfb69b427ea80fe", 16),
    BigInt("39b50c3ed970f46c", 16),
    BigInt("5b9b177aa3eb3e8a", 16),
    BigInt("6510063ecf4ec903", 16),
    BigInt("2b3bbd2c00797c7a", 16),
    BigInt("f1d6204ff5cb4aa7", 16),
    BigInt("4836e27ccf099f38", 16),
    BigInt("82efbb0dd073b44d", 16),
    BigInt("4a80c282ffd7d4c6", 16),
    BigInt("305d1a9c9ee43bdf", 16),
    BigInt("15c366948ffc6997", 16),
    BigInt("80153ae218916e7b", 16),
    BigInt("fa23e2bdf9e2a9e1", 16),
    BigInt("d47e8d8a2333c6de", 16),
    BigInt("7e128095f688b056", 16),
    BigInt("2f5356890efcedab", 16),
    BigInt("95c2b383014f55c5", 16),
    BigInt("4727a5339ce6070f", 16),
    BigInt("b0555ecd575108e9", 16),
    BigInt("48d785770bb4af37", 16),
    BigInt("09d4701c12af02b1", 16),
    BigInt("79f031e78f3cf62e", 16),
    BigInt("52a1ee85db1b5a94", 16),
    BigInt("6bd95b2eb37fa6b8", 16),
    BigInt("74971b7077aef85d", 16),
    BigInt("b4e4fae2ffcc1aad", 16),
    BigInt("2bd48bd898b8f63a", 16),
    BigInt("e9966ac1556257f6", 16),
    BigInt("92a3d1cd078ba293", 16),
    BigInt("f81175a482e20ab8", 16),
    BigInt("5bbb3de722e73048", 16),
    BigInt("6b4f363492b9f2be", 16),
    BigInt("c2d559df73d59875", 16),
    BigInt("f75f62284bc7a8c2", 16),
    BigInt("da8dd8e116a9f1cc", 16),
    BigInt("bdc1e6ab76057885", 16),
    BigInt("fec6a4238a1224a0", 16),
    BigInt("c03f40f3223e290e", 16),
    BigInt("1ed21673466ffda9", 16),
    BigInt("df70f906bb0dd2af", 16),
    BigInt("f3dcda369f2af666", 16),
    BigInt("9ebb11573cdcebde", 16),
    BigInt("81c72d9077fedca0", 16),
    BigInt("0ec074a31be5fb15", 16),
    BigInt("2a8b3280b6c48f20", 16),
    BigInt("fd31777513309344", 16),
    BigInt("194534a86ad006b6", 16),
    BigInt("3be6fdf46e0cfe12", 16),
    BigInt("017cc137a07eb057", 16),
    BigInt("9428fc6e7d26b54d", 16),
    BigInt("9aaa2e3603ef8ad7", 16),
    BigInt("82c6d3f3a0ccdf7d", 16),
    BigInt("c86eeea00cf09b65", 16),
    BigInt("705f8189dbb58299", 16),
    BigInt("415a7f554391ca69", 16),
    BigInt("cfe3d49fa2bdc555", 16),
    BigInt("f0f9c56039b25191", 16),
    BigInt("7075cb6abd1d32d9", 16),
    BigInt("43c94e2c8b277509", 16),
    BigInt("3cbfd4e4ea670359", 16),
    BigInt("c05887810f4d019d", 16),
    BigInt("14468ff93ac22dc5", 16),
    BigInt("ebed699589d99c05", 16),
    BigInt("6d99f6df321ca5d5", 16),
    BigInt("0cd410d08c36d625", 16),
    BigInt("ef1b2a2c86831d35", 16),
    BigInt("3b349c4d69ee5f05", 16),
    BigInt("55248ce88f45f035", 16),
    BigInt("aa69ca6a18a4c885", 16),
    BigInt("1fe3fce62bd816b5", 16),
    BigInt("0289a488a8df69d9", 16),
    BigInt("15e96e1613df98b5", 16),
    BigInt("e6be57375ad89b99", 16)
  )
  val correctHash32a = immutable.LinearSeq[BigInt](
    BigInt("811c9dc5", 16),
    BigInt("e40c292c", 16),
    BigInt("e70c2de5", 16),
    BigInt("e60c2c52", 16),
    BigInt("e10c2473", 16),
    BigInt("e00c22e0", 16),
    BigInt("e30c2799", 16),
    BigInt("6222e842", 16),
    BigInt("a9f37ed7", 16),
    BigInt("3f5076ef", 16),
    BigInt("39aaa18a", 16),
    BigInt("bf9cf968", 16),
    BigInt("5f299f4e", 16),
    BigInt("ef8580f3", 16),
    BigInt("ac297727", 16),
    BigInt("4546b9c0", 16),
    BigInt("bd564e7d", 16),
    BigInt("6bdd5c67", 16),
    BigInt("dd77ed30", 16),
    BigInt("f4ca9683", 16),
    BigInt("4aeb9bd0", 16),
    BigInt("e0e67ad0", 16),
    BigInt("c2d32fa8", 16),
    BigInt("7f743fb7", 16),
    BigInt("6900631f", 16),
    BigInt("c59c990e", 16),
    BigInt("448524fd", 16),
    BigInt("d49930d5", 16),
    BigInt("4c298165", 16),
    BigInt("fc563735", 16),
    BigInt("8cb91483", 16),
    BigInt("775bf5d0", 16),
    BigInt("d5c428d0", 16),
    BigInt("34cc0ea3", 16),
    BigInt("ea3b4cb7", 16),
    BigInt("8e59f029", 16),
    BigInt("2094de2b", 16),
    BigInt("a65a0ad4", 16),
    BigInt("9bbee5f4", 16),
    BigInt("be836343", 16),
    BigInt("22d5344e", 16),
    BigInt("19a1470c", 16),
    BigInt("683af69a", 16),
    BigInt("4f9f2cab", 16),
    BigInt("c48fb86d", 16),
    BigInt("2269f369", 16),
    BigInt("c18fb3b4", 16),
    BigInt("50ef1236", 16),
    BigInt("c28fb547", 16),
    BigInt("96c3bf47", 16),
    BigInt("bf8fb08e", 16),
    BigInt("f3e4d49c", 16),
    BigInt("32179058", 16),
    BigInt("280bfee6", 16),
    BigInt("30178d32", 16),
    BigInt("21addaf8", 16),
    BigInt("4217a988", 16),
    BigInt("772633d6", 16),
    BigInt("08a3d11e", 16),
    BigInt("07a3cf8b", 16),
    BigInt("06a3cdf8", 16),
    BigInt("1d5636a7", 16),
    BigInt("1353e852", 16),
    BigInt("a55b89ed", 16),
    BigInt("0588b13c", 16),
    BigInt("e83641e1", 16),
    BigInt("f1760448", 16),
    BigInt("97b4ea23", 16),
    BigInt("9a4e92e6", 16),
    BigInt("f01b2511", 16),
    BigInt("ce524afa", 16),
    BigInt("dd16ef45", 16),
    BigInt("60648bb3", 16),
    BigInt("7fa4bcfc", 16),
    BigInt("5053ae17", 16),
    BigInt("c9302890", 16),
    BigInt("956ded32", 16),
    BigInt("9136db84", 16),
    BigInt("df9d3323", 16),
    BigInt("32bb6cd0", 16),
    BigInt("c8f8385b", 16),
    BigInt("eb08bfba", 16),
    BigInt("62cc8e3d", 16),
    BigInt("c3e20f5c", 16),
    BigInt("39e97f17", 16),
    BigInt("7837b203", 16),
    BigInt("319e877b", 16),
    BigInt("d3e63f89", 16),
    BigInt("29b50b38", 16),
    BigInt("5ed678b8", 16),
    BigInt("b0d5b793", 16),
    BigInt("52450be5", 16),
    BigInt("fa72d767", 16),
    BigInt("95066709", 16),
    BigInt("7f52e123", 16),
    BigInt("76966481", 16),
    BigInt("063258b0", 16),
    BigInt("2ded6e8a", 16),
    BigInt("b07d7c52", 16),
    BigInt("d0c71b71", 16),
    BigInt("f684f1bd", 16),
    BigInt("868ecfa8", 16),
    BigInt("f794f684", 16),
    BigInt("d19701c3", 16),
    BigInt("346e171e", 16),
    BigInt("91f8f676", 16),
    BigInt("0bf58848", 16),
    BigInt("6317b6d1", 16),
    BigInt("afad4c54", 16),
    BigInt("0f25681e", 16),
    BigInt("91b18d49", 16),
    BigInt("7d61c12e", 16),
    BigInt("5147d25c", 16),
    BigInt("9a8b6805", 16),
    BigInt("4cd2a447", 16),
    BigInt("1e549b14", 16),
    BigInt("2fe1b574", 16),
    BigInt("cf0cd31e", 16),
    BigInt("6c471669", 16),
    BigInt("0e5eef1e", 16),
    BigInt("2bed3602", 16),
    BigInt("b26249e0", 16),
    BigInt("2c9b86a4", 16),
    BigInt("e415e2bb", 16),
    BigInt("18a98d1d", 16),
    BigInt("b7df8b7b", 16),
    BigInt("241e9075", 16),
    BigInt("063f70dd", 16),
    BigInt("0295aed9", 16),
    BigInt("56a7f781", 16),
    BigInt("253bc645", 16),
    BigInt("46610921", 16),
    BigInt("7c1577f9", 16),
    BigInt("512b2851", 16),
    BigInt("76823999", 16),
    BigInt("c0586935", 16),
    BigInt("f3415c85", 16),
    BigInt("0ae4ff65", 16),
    BigInt("58b79725", 16),
    BigInt("dea43aa5", 16),
    BigInt("2bb3be35", 16),
    BigInt("ea777a45", 16),
    BigInt("8f21c305", 16),
    BigInt("5c9d0865", 16),
    BigInt("fa823dd5", 16),
    BigInt("21a27271", 16),
    BigInt("83c5c6d5", 16),
    BigInt("813b0881", 16)
  )
  val correctHash64a = immutable.LinearSeq[BigInt](
    BigInt("cbf29ce484222325", 16),
    BigInt("af63dc4c8601ec8c", 16),
    BigInt("af63df4c8601f1a5", 16),
    BigInt("af63de4c8601eff2", 16),
    BigInt("af63d94c8601e773", 16),
    BigInt("af63d84c8601e5c0", 16),
    BigInt("af63db4c8601ead9", 16),
    BigInt("08985907b541d342", 16),
    BigInt("dcb27518fed9d577", 16),
    BigInt("dd120e790c2512af", 16),
    BigInt("cac165afa2fef40a", 16),
    BigInt("85944171f73967e8", 16),
    BigInt("08a25607b54a22ae", 16),
    BigInt("f5faf0190cf90df3", 16),
    BigInt("f27397910b3221c7", 16),
    BigInt("2c8c2b76062f22e0", 16),
    BigInt("e150688c8217b8fd", 16),
    BigInt("f35a83c10e4f1f87", 16),
    BigInt("d1edd10b507344d0", 16),
    BigInt("2a5ee739b3ddb8c3", 16),
    BigInt("dcfb970ca1c0d310", 16),
    BigInt("4054da76daa6da90", 16),
    BigInt("f70a2ff589861368", 16),
    BigInt("4c628b38aed25f17", 16),
    BigInt("9dd1f6510f78189f", 16),
    BigInt("a3de85bd491270ce", 16),
    BigInt("858e2fa32a55e61d", 16),
    BigInt("46810940eff5f915", 16),
    BigInt("08a24307b54a0265", 16),
    BigInt("f5b9fd190cc18d15", 16),
    BigInt("4c968290ace35703", 16),
    BigInt("07174bd5c64d9350", 16),
    BigInt("5a294c3ff5d18750", 16),
    BigInt("05b3c1aeb308b843", 16),
    BigInt("b92a48da37d0f477", 16),
    BigInt("73cdddccd80ebc49", 16),
    BigInt("d58c4c13210a266b", 16),
    BigInt("e78b6081243ec194", 16),
    BigInt("b096f77096a39f34", 16),
    BigInt("b425c54ff807b6a3", 16),
    BigInt("23e520e2751bb46e", 16),
    BigInt("1a0b44ccfe1385ec", 16),
    BigInt("08ba5f07b55ec3da", 16),
    BigInt("a430d84680aabd0b", 16),
    BigInt("6961196491cc682d", 16),
    BigInt("ad2bb1774799dfe9", 16),
    BigInt("6961166491cc6314", 16),
    BigInt("8d1bb3904a3b1236", 16),
    BigInt("6961176491cc64c7", 16),
    BigInt("ed205d87f40434c7", 16),
    BigInt("6961146491cc5fae", 16),
    BigInt("cd3baf5e44f8ad9c", 16),
    BigInt("e3b36596127cd6d8", 16),
    BigInt("f77f1072c8e8a646", 16),
    BigInt("e3b36396127cd372", 16),
    BigInt("6067dce9932ad458", 16),
    BigInt("e3b37596127cf208", 16),
    BigInt("4b7b10fa9fe83936", 16),
    BigInt("aabafe7104d914be", 16),
    BigInt("aabafd7104d9130b", 16),
    BigInt("aabafc7104d91158", 16),
    BigInt("e729bac5d2a8d3a7", 16),
    BigInt("e72630c5d2a5b352", 16),
    BigInt("e73042c5d2ae266d", 16),
    BigInt("0a83c86fee952abc", 16),
    BigInt("3e66d3d56b8caca1", 16),
    BigInt("cac54572bb1a6fc8", 16),
    BigInt("7829851fac17b143", 16),
    BigInt("2c8f4c9af81bcf06", 16),
    BigInt("3605a2ac253d2db1", 16),
    BigInt("6be396289ce8a6da", 16),
    BigInt("d9b957fb7fe794c5", 16),
    BigInt("05be33da04560a93", 16),
    BigInt("0957f1577ba9747c", 16),
    BigInt("da2cc3acc24fba57", 16),
    BigInt("74136f185b29e7f0", 16),
    BigInt("b2f2b4590edb93b2", 16),
    BigInt("b3608fce8b86ae04", 16),
    BigInt("4a3a865079359063", 16),
    BigInt("5b3a7ef496880a50", 16),
    BigInt("48fae3163854c23b", 16),
    BigInt("07aaa640476e0b9a", 16),
    BigInt("2f653656383a687d", 16),
    BigInt("a1031f8e7599d79c", 16),
    BigInt("a31908178ff92477", 16),
    BigInt("097edf3c14c3fb83", 16),
    BigInt("b51ca83feaa0971b", 16),
    BigInt("dd3c0d96d784f2e9", 16),
    BigInt("86cd26a9ea767d78", 16),
    BigInt("e6b215ff54a30c18", 16),
    BigInt("ec5b06a1c5531093", 16),
    BigInt("45665a929f9ec5e5", 16),
    BigInt("8c7609b4a9f10907", 16),
    BigInt("89aac3a491f0d729", 16),
    BigInt("32ce6b26e0f4a403", 16),
    BigInt("614ab44e02b53e01", 16),
    BigInt("fa6472eb6eef3290", 16),
    BigInt("9e5d75eb1948eb6a", 16),
    BigInt("b6d12ad4a8671852", 16),
    BigInt("88826f56eba07af1", 16),
    BigInt("44535bf2645bc0fd", 16),
    BigInt("169388ffc21e3728", 16),
    BigInt("f68aac9e396d8224", 16),
    BigInt("8e87d7e7472b3883", 16),
    BigInt("295c26caa8b423de", 16),
    BigInt("322c814292e72176", 16),
    BigInt("8a06550eb8af7268", 16),
    BigInt("ef86d60e661bcf71", 16),
    BigInt("9e5426c87f30ee54", 16),
    BigInt("f1ea8aa826fd047e", 16),
    BigInt("0babaf9a642cb769", 16),
    BigInt("4b3341d4068d012e", 16),
    BigInt("d15605cbc30a335c", 16),
    BigInt("5b21060aed8412e5", 16),
    BigInt("45e2cda1ce6f4227", 16),
    BigInt("50ae3745033ad7d4", 16),
    BigInt("aa4588ced46bf414", 16),
    BigInt("c1b0056c4a95467e", 16),
    BigInt("56576a71de8b4089", 16),
    BigInt("bf20965fa6dc927e", 16),
    BigInt("569f8383c2040882", 16),
    BigInt("e1e772fba08feca0", 16),
    BigInt("4ced94af97138ac4", 16),
    BigInt("c4112ffb337a82fb", 16),
    BigInt("d64a4fd41de38b7d", 16),
    BigInt("4cfc32329edebcbb", 16),
    BigInt("0803564445050395", 16),
    BigInt("aa1574ecf4642ffd", 16),
    BigInt("694bc4e54cc315f9", 16),
    BigInt("a3d7cb273b011721", 16),
    BigInt("577c2f8b6115bfa5", 16),
    BigInt("b7ec8c1a769fb4c1", 16),
    BigInt("5d5cfce63359ab19", 16),
    BigInt("33b96c3cd65b5f71", 16),
    BigInt("d845097780602bb9", 16),
    BigInt("84d47645d02da3d5", 16),
    BigInt("83544f33b58773a5", 16),
    BigInt("9175cbb2160836c5", 16),
    BigInt("c71b3bc175e72bc5", 16),
    BigInt("636806ac222ec985", 16),
    BigInt("b6ef0e6950f52ed5", 16),
    BigInt("ead3d8a0f3dfdaa5", 16),
    BigInt("922908fe9a861ba5", 16),
    BigInt("6d4821de275fd5c5", 16),
    BigInt("1fe3fce62bd816b5", 16),
    BigInt("c23e9fccd6f70591", 16),
    BigInt("c1af12bdfe16b5b5", 16),
    BigInt("39e9f18f2f85e221", 16)
  )
}

class FNVSpec extends UnitSpec {
  "Test data" must "have 148 items" in {
    assert(data.length == 148)
    assert(correctHash32.length == 148)
    assert(correctHash64.length == 148)
    assert(correctHash32a.length == 148)
    assert(correctHash64a.length == 148)
  }
  "FNV-1 hash32" must "match reference data" in {
    data.zip(correctHash32).foreach { x =>
      assert(FNV.hash32(x._1) == x._2)
    }
  }
  "FNV hash32a" must "match reference data" in {
    data.zip(correctHash32a).foreach { x =>
      assert(FNV.hash32a(x._1) == x._2)
    }
  }
  "FNV hash64" must "match reference data" in {
    data.zip(correctHash64).foreach { x =>
      assert(FNV.hash64(x._1) == x._2)
    }
  }
  "FNV hash64a" must "match reference data" in {
    data.zip(correctHash64a).foreach { x =>
      assert(FNV.hash64a(x._1) == x._2)
    }
  }
}
